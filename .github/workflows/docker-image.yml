name: 랑스의 테스트

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    
jobs:
  build:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
     # Step 1
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2
     # Step 2
      - name: Create CodeDeploy Deployment
        id: deploy
        run: |
          aws deploy create-deployment \
            --application-name hirang-nodejs \
            --deployment-group-name NodejsDeployGroup \
            --deployment-config-name CodeDeployDefault.OneAtATime \
            --github-location repository=${{ github.repository }},commitId=${{ github.sha }}
#   job_echo:
#     runs-on: ubuntu-latest
#     steps:
#       - name: GITHUB_REF
#         run: echo ${{github.ref}} 
#       - name: GITHUB_SHA
#         run: echo ${{github.sha}}
      
        
#   job_pwd_ls:
#     name: PWD & LS
#     runs-on: ubuntu-latest
#     steps:
#       - name: Print working directory
#         run: pwd
#       - name: List files
#         run: ls -al
#   job_checkout:
#      name: Check out
#      runs-on: ubuntu-latest
#      steps:
#        - run: pwd
#        - run: ls -al
#        - uses: actions/checkout@v3
#        - run: ls -al
#        - run: pwd
#        - run: cat .github/workflows/docker-image.yml
#        - run: cat ./app.js
       
#   job_checkout1:
#      name: Check out1
#      runs-on: ubuntu-latest
#      steps:
#        - run: pwd
#        - run: ls -al
#        - uses: actions/checkout@v3
#          with:
#            path: hirang
#        - run: ls -al
#        - run: pwd
#        - run: cat .github/workflows/docker-image.yml
#        - run: cat ./app.js


#   build:
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v3
#     - run: echo "Deploying to production server on branch ${GITHUB_REF#refs/heads/}"
#     - name: SSH Remote Commands
#       uses: appleboy/ssh-action@v0.1.5
#       with:
#        host: ${{secrets.AWS_HIRANG_IP}}
#        username: ${{secrets.AWS_HIRANG_USERNAME}}
#        key: ${{secrets.AWS_HIRANG_SSH}}
#        script: |    
#          cd /home/ec2-user/hirang-nodejs
#          git pull
#          docker stop nodejs
#          docker rm nodejs
#          sudo docker build --progress=tty --tag hirang-nodejs .
#          docker run --name nodejs -d -p 8080:8080 hirang-nodejs

        
         
   

