name: 랑스의 테스트 두번째

on:
  push:
    branches: [ "test" ]
  pull_request:
    branches: [ "test" ]

jobs:
  job_1:
    name: Add 3 and 7
    runs-on: ubuntu-latest
    steps:
      - shell: bash
        run: |
          expr 3 + 7 > math-homework.txt
      - name: Upload math result for job 1
        uses: actions/upload-artifact@v1
        with:
          name: homework
          path: math-homework.txt

  job_2:
    name: Multiply by 9
    needs: job_1
    runs-on: windows-latest
    steps:
      - name: Download math result for job 1
        uses: actions/download-artifact@v1
        with:
          name: homework
      - shell: bash
        run: |
          value=`cat homework/math-homework.txt`
          expr $value \* 9 > homework/math-homework.txt
      - name: Upload math result for job 2
        uses: actions/upload-artifact@v1
        with:
          name: homework
          path: homework/math-homework.txt

  job_3:
    name: Display results
    needs: job_2
    runs-on: macOS-latest
    steps:
      - name: Download math result for job 2
        uses: actions/download-artifact@v1
        with:
          name: homework
      - name: Print the final result
        shell: bash
        run: |
          value=`cat homework/math-homework.txt`
          echo The result is $value



#   date:
#     runs-on: ${{ matrix.os }}
#     strategy:
#       matrix:
#         os:
#           - ubuntu-latest
#           - windows-latest
#           - macos-latest
#     steps:
#       - run: date

#   date1:
#     runs-on: ubuntu-latest
#     steps:
#       - run: date
#   date2:
#     runs-on: windows-latest
#     steps:
#       - run: date
#   date3:
#     runs-on: macos-latest
#     steps:
#       - run: date


#   echo:
#     runs-on: ubuntu-latest
#     steps:
#       - run: echo 'Hello!'
#   echo_if:
#     runs-on: ubuntu-latest
#     if: github.ref_name == 'dev'
#     steps:
#       - run: echo 'Hello, Main!'
#   skip_ci:
#     runs-on: ubuntu-latest
#     if: ${{ !contains(github.event.head_commit.message, 'skip ci') }}
#     steps:
#       - run: echo 'Hello, Skip CI!'
      
      
#   job1:
#     runs-on: ubuntu-latest
#     steps:
#       - run: echo ${{ github.job }}
#   job2:
#     runs-on: ubuntu-latest
#     needs: job1
#     steps:
#       - run: echo ${{ github.job }}
#   job3:
#     runs-on: ubuntu-latest
#     needs: [job1, job2]
#     steps:
#       - run: echo ${{ github.job }}

#   build:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v3
#       - uses: actions/setup-node@v3
#         with:
#           node-version: 18.4.0
#           cache: 'npm'
#       - run: npm install
#       - run: npm ci
#       - run: node -v
      
      
#   cache:
#     name: Cache
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v3 
#       - uses: actions/cache@v3
#         id: npm-cache
#         with:
#           path: ~/.npm
#           key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
#       - if: steps.npm-cache.outputs.cache-hit == 'true'
#         run: echo 'npm cache hit!'
#       - if: steps.npm-cache.outputs.cache-hit != 'true'
#         run: echo 'npm cache missed!'
#       - run: npm install  
#       - run: npm ci
#       - run: node -v
      
#       - run: npm test
#       - run: npm run build
      
      
      
      
      
#       - uses: actions/checkout@v3
#       - run: npm install
#       - run: pwd
#       - run: ls -al
#       - uses: actions/cache@v3 
#         with:
#           path: ~/.npm
#           key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
#       - if: steps.npm-cache.outputs.cache-hit == 'true'
#         run: echo 'npm cache hit!'
#       - if: steps.npm-cache.outputs.cache-hit != 'true'
#         run: echo 'npm cache missed!'
#       - run: npm ci
#       - run: ls -al
      
    
#   echo:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Print Echo
#         run: echo 'Hello, GitHub Actions!'
#   pwd-ls:
#     name: PWD & LS
#     runs-on: ubuntu-latest
#     steps:
#       - name: Print working directory
#         run: pwd
#       - name: List files
#         run: ls -al
#   checkout:
#      name: Check out
#      runs-on: ubuntu-latest
#      steps:
#        - run: ls -al
#        - uses: actions/checkout@v3
#        - run: ls -al
#        - run: pwd
#        - run: cat .github/workflows/docker-image.yml
#        - run: cat ./app.js
#   build:
#     runs-on: ubuntu-latest
#     strategy:
#       matrix:
#         node-version: [10.x, 12.x, 14.x, 15.x]
#     steps:
#       - uses: actions/checkout@v3
#       - name: Use Node.js ${{ matrix.node-version }}
#         uses: actions/setup-node@v3
#         with:
#           node-version: ${{ matrix.node-version }}
#       - run: npm install
#       - run: npm run build --if-present
#       - run: npm run     
         
   
#   build:
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v3
#     - name: SSH Remote Commands
#       uses: appleboy/ssh-action@v0.1.5
#       with:
#        host: ${{secrets.AWS_HIRANG_IP}}
#        username: ${{secrets.AWS_HIRANG_USERNAME}}
#        key: ${{secrets.AWS_HIRANG_SSH}}
#        script: |    
#          cd /home/ec2-user/hirang-nodejs
#          git pull
#          docker stop nodejs
#          docker rm nodejs
#          sudo docker build --progress=tty --tag hirang-nodejs .
#          docker run --name nodejs -d -p 8080:8080 hirang-nodejs
